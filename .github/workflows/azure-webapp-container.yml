name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: [ "deployment/containerApp"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGISTRY: ${{ secrets.DOCKERHUB_REGISTRY }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_IMAGE }}
  CONTAINER_APP_NAME: ${{ vars.AZURE_CONTAINER_APP_NAME }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

jobs:
  # build-and-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Log in to Docker Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build and push multi-platform Docker image
  #       run: |
  #         docker buildx build \
  #           --platform linux/amd64,linux/arm64 \
  #           --tag $REGISTRY/$IMAGE_NAME:latest \
  #           --push \
  #           .

  deploy:
    runs-on: ubuntu-latest
    # needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-platform Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag $REGISTRY/$IMAGE_NAME:latest \
            --push \
            .

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --image $REGISTRY/$IMAGE_NAME:latest \
            --set-env-vars \
              COSMOS_CONNECTION_STRING="${{ secrets.COSMOS_CONNECTION_STRING }}" \
              COSMOS_DATABASE="${{ secrets.COSMOS_DATABASE }}" \
              COSMOS_CONTAINER="${{ secrets.COSMOS_CONTAINER }}" \
            --cpu 0.25 \
            --memory 0.5Gi \
            --min-replicas 0 \
            --max-replicas 2 \
            --scale-rule-name "http-requests" \
            --scale-rule-type "http" \
            --scale-rule-metadata concurrentRequests=10